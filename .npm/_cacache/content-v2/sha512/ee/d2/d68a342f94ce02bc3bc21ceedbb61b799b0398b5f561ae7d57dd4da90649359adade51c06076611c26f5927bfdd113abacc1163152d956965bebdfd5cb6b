{
  "_id" : "minipass-collect",
  "_rev" : "2-a0fe8c4f17f5b0ff7d194eadb1c89949",
  "name" : "minipass-collect",
  "description" : "A Minipass stream that collects all the data into a single chunk",
  "dist-tags" : {
    "latest" : "1.0.2"
  },
  "versions" : {
    "1.0.0" : {
      "name" : "minipass-collect",
      "description" : "A Minipass stream that collects all the data into a single chunk",
      "version" : "1.0.0",
      "author" : {
        "name" : "Isaac Z. Schlueter",
        "email" : "i@izs.me",
        "url" : "https://izs.me"
      },
      "dist" : {
        "tarball" : "https://build-artifactory.eng.vmware.com/api/npm/npm/minipass-collect/-/minipass-collect-1.0.0.tgz",
        "shasum" : "248d067baa462694188962cc6cf532aa19269ca2"
      },
      "dependencies" : {
        "minipass" : "^2.5.1"
      },
      "devDependencies" : {
        "tap" : "^14.6.4"
      },
      "license" : "ISC",
      "maintainers" : [ {
        "name" : "isaacs",
        "email" : "i@izs.me"
      } ],
      "directories" : {
      },
      "scripts" : {
        "test" : "tap",
        "snap" : "tap",
        "preversion" : "npm test",
        "postversion" : "npm publish",
        "postpublish" : "git push origin --follow-tags"
      },
      "_npmVersion" : "6.11.3",
      "_npmUser" : {
        "name" : "isaacs",
        "email" : "i@izs.me"
      },
      "_id" : "minipass-collect@1.0.0",
      "gitHead" : "a35731a6b23dfd35854ae2fe20c3e209bc43de80",
      "tap" : {
        "check-coverage" : true
      },
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/minipass-collect_1.0.0_1568586294266_0.059989271495353824"
      },
      "_nodeVersion" : "12.8.1"
    },
    "1.0.1" : {
      "name" : "minipass-collect",
      "description" : "A Minipass stream that collects all the data into a single chunk",
      "version" : "1.0.1",
      "author" : {
        "name" : "Isaac Z. Schlueter",
        "email" : "i@izs.me",
        "url" : "https://izs.me"
      },
      "dist" : {
        "tarball" : "https://build-artifactory.eng.vmware.com/api/npm/npm/minipass-collect/-/minipass-collect-1.0.1.tgz",
        "shasum" : "4e145371e0032332d398bb0e18bdbd56b7131443"
      },
      "dependencies" : {
        "minipass" : "^2.5.1"
      },
      "devDependencies" : {
        "tap" : "^14.6.4"
      },
      "license" : "ISC",
      "maintainers" : [ {
        "name" : "isaacs",
        "email" : "i@izs.me"
      } ],
      "directories" : {
      },
      "scripts" : {
        "test" : "tap",
        "snap" : "tap",
        "preversion" : "npm test",
        "postversion" : "npm publish",
        "postpublish" : "git push origin --follow-tags"
      },
      "_npmVersion" : "6.11.3",
      "_npmUser" : {
        "name" : "isaacs",
        "email" : "i@izs.me"
      },
      "_id" : "minipass-collect@1.0.1",
      "gitHead" : "b4ab479a0a07bb49c6315b7d01c0ae07c340ce96",
      "tap" : {
        "check-coverage" : true
      },
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/minipass-collect_1.0.1_1568588558407_0.11337844967850974"
      },
      "_nodeVersion" : "12.8.1"
    },
    "1.0.2" : {
      "name" : "minipass-collect",
      "description" : "A Minipass stream that collects all the data into a single chunk",
      "version" : "1.0.2",
      "author" : {
        "name" : "Isaac Z. Schlueter",
        "email" : "i@izs.me",
        "url" : "https://izs.me"
      },
      "engines" : {
        "node" : ">= 8"
      },
      "dist" : {
        "tarball" : "https://build-artifactory.eng.vmware.com/api/npm/npm/minipass-collect/-/minipass-collect-1.0.2.tgz",
        "shasum" : "22b813bf745dc6edba2576b940022ad6edc8c617"
      },
      "dependencies" : {
        "minipass" : "^3.0.0"
      },
      "devDependencies" : {
        "tap" : "^14.6.9"
      },
      "license" : "ISC",
      "maintainers" : [ {
        "name" : "isaacs",
        "email" : "i@izs.me"
      } ],
      "directories" : {
      },
      "scripts" : {
        "test" : "tap",
        "snap" : "tap",
        "preversion" : "npm test",
        "postversion" : "npm publish",
        "postpublish" : "git push origin --follow-tags"
      },
      "_npmVersion" : "6.12.0-next.0",
      "_npmUser" : {
        "name" : "isaacs",
        "email" : "i@izs.me"
      },
      "_id" : "minipass-collect@1.0.2",
      "gitHead" : "95c7358c4b4f940568f209dd408730a6943ecb8e",
      "tap" : {
        "check-coverage" : true
      },
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/minipass-collect_1.0.2_1569877028029_0.9003110762470692"
      },
      "_nodeVersion" : "12.8.1"
    }
  },
  "readme" : "# minipass-collect\n\nA Minipass stream that collects all the data into a single chunk\n\nNote that this buffers ALL data written to it, so it's only good for\nsituations where you are sure the entire stream fits in memory.\n\nNote: this is primarily useful for the `Collect.PassThrough` class, since\nMinipass streams already have a `.collect()` method which returns a promise\nthat resolves to the array of chunks, and a `.concat()` method that returns\nthe data concatenated into a single Buffer or String.\n\n## USAGE\n\n```js\nconst Collect = require('minipass-collect')\n\nconst collector = new Collect()\ncollector.on('data', allTheData => {\n  console.log('all the data!', allTheData)\n})\n\nsomeSourceOfData.pipe(collector)\n\n// note that you can also simply do:\nsomeSourceOfData.pipe(new Minipass()).concat().then(data => ...)\n// or even, if someSourceOfData is a Minipass:\nsomeSourceOfData.concat().then(data => ...)\n// but you might prefer to have it stream-shaped rather than\n// Promise-shaped in some scenarios.\n```\n\nIf you want to collect the data, but _also_ act as a passthrough stream,\nthen use `Collect.PassThrough` instead (for example to memoize streaming\nresponses), and listen on the `collect` event.\n\n```js\nconst Collect = require('minipass-collect')\n\nconst collector = new Collect.PassThrough()\ncollector.on('collect', allTheData => {\n  console.log('all the data!', allTheData)\n})\n\nsomeSourceOfData.pipe(collector).pipe(someOtherStream)\n```\n\nAll [minipass options](http://npm.im/minipass) are supported.\n",
  "maintainers" : [ {
    "name" : "isaacs",
    "email" : "i@izs.me"
  } ],
  "author" : {
    "name" : "Isaac Z. Schlueter",
    "email" : "i@izs.me",
    "url" : "https://izs.me"
  },
  "time" : {
    "created" : "2019-09-15T22:24:54.265Z",
    "modified" : "2019-09-30T20:57:10.733Z",
    "1.0.0" : "2019-09-15T22:24:54.411Z",
    "1.0.1" : "2019-09-15T23:02:38.518Z",
    "1.0.2" : "2019-09-30T20:57:08.179Z"
  },
  "users" : {
  },
  "readmeFilename" : "README.md",
  "license" : "ISC"
}