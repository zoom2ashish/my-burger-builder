{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/Order.module.css","containers/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/Burger/OrderSummary/OrderSummary.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","axios-orders.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","activeClassName","active","to","link","navigationItems","NavigationItems","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sidedrawerClosedHandler","setState","sidedrawerToggleHandler","prevState","this","Content","Component","instance","axios","create","baseURL","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","type","buildControls","BuildControls","price","toFixed","map","control","key","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","igKey","igCount","Array","_","i","reduce","acc","el","length","Burger","button","Button","btnType","OrderSummary","console","log","ingredientSummary","IngredientLabel","totalPrice","purchaseCanceled","purchaseContinued","Modal","nextProps","nextState","modalClosed","transform","opacity","spinner","Spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","values","count","disabledInfo","orderSummary","updatePurchaseState","onIngredientAdded","onIngredientRemoved","connect","dispatch","ingName","ingredientName","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","validationError","inputClasses","touched","invalid","shouldValidate","valueType","elementType","elementConfig","value","onChange","changed","options","option","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipcode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","orderData","post","then","catch","finally","inputChangeHandler","inputId","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Input","evt","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","CheckoutSummary","path","match","component","quantity","ingredientsOutput","deleteOrderClicked","orders","loadData","get","fetchedOrders","data","delete","updatedOrders","filter","Order","deleteOrderClickedHandler","App","Orders","Boolean","window","location","hostname","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","reducer","action","priceAddition","updatedTotalPrice","priceRemoved","store","createStore","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9ad0224.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\",\"ValidationError\":\"Input_ValidationError__qMR97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\",\"Ingredient\":\"Order_Ingredient__3TktI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PrDi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IngredientLabel\":\"OrderSummary_IngredientLabel__vsEaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__BWqNs\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport classes from './Logo.module.css';\nimport burgerLogo from '../../assets/images/burger-logo.png';\n\nconst logo = (props) => (\n  <div className={classes.Logo} style={{height: props.height}}>\n    <img src={burgerLogo} alt=\"MyBurger\" />\n  </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n  <li className={classes.NavigationItem}>\n    <NavLink\n      exact={props.exact}\n      activeClassName={classes.active}\n      to={props.link}>{props.children}</NavLink>\n  </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n    <NavigationItem link=\"/orders\">Orders</NavigationItem>\n\n  </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n  <div onClick={props.clicked} className={classes.DrawerToggle}>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked}></DrawerToggle>\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <nav className={classes.DesktopOnly}>\n      <NavigationItems />\n    </nav>\n  </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n  props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport classes from './SideDrawer.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close];\n  if (props.open) {\n    attachedClasses = [classes.SideDrawer, classes.Open ];\n  }\n  return (\n    <Aux>\n      <Backdrop show={props.open} clicked={props.closed}></Backdrop>\n      <div className={attachedClasses.join(' ')}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </Aux>\n  );\n};\n\nexport default sideDrawer;","import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport classes from \"./Layout.module.css\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sidedrawerClosedHandler = () => {\n    this.setState({showSideDrawer: false})\n  }\n\n  sidedrawerToggleHandler = () => {\n    this.setState((prevState) => {\n      return { showSideDrawer: !prevState.showSideDrawer }\n    });\n  }\n\n  render() {\n    return (\n      <Aux>\n        <Toolbar drawerToggleClicked={this.sidedrawerToggleHandler}></Toolbar>\n        <SideDrawer\n          open={this.state.showSideDrawer}\n          closed={this.sidedrawerClosedHandler} />\n        <main className={classes.Content}>{this.props.children}</main>\n      </Aux>\n    );\n  }\n}\n\nexport default Layout;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://react-my-burger-a134e.firebaseio.com/'\n});\n\nexport default instance;","import React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nconst buildControl = props => (\n  <div className={classes.BuildControl}>\n    <div className={classes.Label}>{props.label}</div>\n    <button\n      className={classes.Less}\n      onClick={props.removed}\n      disabled={props.disabled}\n    >\n      Less\n    </button>\n    <button className={classes.More} onClick={props.added}>\n      More\n    </button>\n  </div>\n);\n\nexport default buildControl;\n","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = (props) => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n      {\n        controls.map(control => (\n          <BuildControl\n            key={control.label}\n            label={control.label}\n            added={() => props.ingredientAdded(control.type) }\n            removed={() => props.ingredientRemoved(control.type)  }\n            disabled={props.disabled[control.type]}\n            />\n        ))\n      }\n      <button className={classes.OrderButton}\n        disabled={!props.purchasable}\n        onClick={props.ordered}>ORDER NOW</button>\n    </div>\n  );\n};\n\nexport default buildControls;","import React, { Component } from \"react\";\nimport classes from \"./BurgerIngredient.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n      default:\n        ingredient = null;\n    }\n\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map((igKey) => {\n      const igCount = props.ingredients[igKey];\n      return [...Array(igCount)].map((_, i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey} />\n      });\n    }).reduce((acc, el) => {\n      return [...acc, ...el];\n    }, []);\n\n  if(transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients!</p>\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\"></BurgerIngredient>\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\"></BurgerIngredient>\n    </div>\n  );\n};\n\nexport default burger;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(' ')}\n    disabled={props.disabled}\n    onClick={props.clicked}\n    >{props.children}</button>\n);\n\nexport default button;","import React, { Component } from \"react\";\nimport classes from \"./OrderSummary.module.css\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n\n  componentWillUpdate() {\n    console.log('OrderSummary component will update');\n  }\n\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients)\n      .map(igKey => {\n        return(\n          <li key={igKey}>\n            <span className={classes.IngredientLabel}>{igKey}: {this.props.ingredients[igKey]}</span>\n          </li>\n        );\n      });\n\n    return (\n      <Aux>\n        <h3>Your Order</h3>\n        <p>A delicious burger with following ingredients:</p>\n        <ul>\n          {ingredientSummary}\n        </ul>\n        <p><strong>Total Price: {this.props.totalPrice.toFixed(2)}</strong></p>\n        <p>Continue to checkout</p>\n        <Button clicked={this.props.purchaseCanceled} btnType=\"Danger\">CANCEL</Button>\n        <Button clicked={this.props.purchaseContinued} btnType=\"Success\">CONTINUE</Button>\n      </Aux>\n    );\n  }\n};\n\nexport default OrderSummary;\n","import React, { Component } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nclass Modal extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children;\n  }\n\n  componentWillUpdate() {\n    console.log('Modal component will update');\n  }\n\n  render() {\n    return (\n      <Aux>\n        <Backdrop\n          show={this.props.show}\n          clicked={this.props.modalClosed}\n        ></Backdrop>\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n  <div className={classes.Spinner}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from \"react\";\nimport Aux from \"../Aux/Aux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    reqInterceptor;\n    resInterceptor;\n    state = {\n      error: null\n    };\n\n    componentWillMount() {\n      this.reqInterceptor = axios.interceptors.request.use(request => {\n        this.setState({ error: null });\n        return request;\n      });\n\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({ error: error });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Aux>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\nexport default withErrorHandler;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport axios from '../../axios-orders';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Burger from '../../components/Burger/Burger';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Modal from '../../components/UI/Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Aux from '../../hoc/Aux/Aux';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from '../../store/actions';\n\nclass BurgerBuilder extends Component {\n  state = {\n    purchasing: false,\n    loading: false,\n    error: false\n  };\n\n  componentDidMount() {\n    // axios\n    //   .get(\"https://react-my-burger-a134e.firebaseio.com/ingredients.json\")\n    //   .then(response => {\n    //     this.setState({ ingredients: response.data });\n    //   })\n    //   .catch(error => {\n    //     this.setState({ error: true });\n    //   });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((acc, count) => {\n      return acc + count;\n    }, 0);\n\n    return sum > 0\n  }\n  purchaseHandler = () => {\n    this.setState({\n      purchasing: true\n    });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.history.push('/checkout');\n  };\n\n  render() {\n    const ingredients = this.props.ingredients;\n    const disabledInfo = {\n      ...ingredients\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n\n    let burger = this.state.error ?\n      <p>Ingredients cannot be loaded!!</p>\n      : <Spinner />;\n\n    if (ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={ingredients}></Burger>\n          <BuildControls\n            price={this.props.totalPrice}\n            purchasable={this.updatePurchaseState(ingredients)}\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            ordered={this.purchaseHandler}\n          />\n        </Aux>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={ingredients}\n          purchaseCanceled={this.purchaseCancelHandler}\n          purchaseContinued={this.purchaseContinueHandler}\n          totalPrice={this.props.totalPrice}\n        ></OrderSummary>\n      );\n    }\n\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n    if (this)\n      return (\n        <Aux>\n          <Modal\n            show={this.state.purchasing}\n            modalClosed={this.purchaseCancelHandler}\n          >\n            {orderSummary}\n          </Modal>\n          {burger}\n        </Aux>\n      );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\n    onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\n  }\n}\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(BurgerBuilder);\n\nexport default withErrorHandler(ConnectedComponent, axios);\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENTS';","import React from \"react\";\nimport * as classes from \"./CheckoutSummary.module.css\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../UI/Button/Button\";\n\nconst checkoutSummary = props => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!!!</h1>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\n        CONTINUE\n      </Button>\n    </div>\n  );\n};\n\nexport default checkoutSummary;\n","import React from \"react\";\nimport * as classes from './Input.module.css';\n\nconst input = props => {\n  let inputElement = null;\n  let validationError = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.touched && props.invalid && props.shouldValidate) {\n    inputClasses.push(classes.Invalid);\n    validationError = <p className={classes.ValidationError}>Please enter valid {props.valueType || 'value'}!</p>\n  }\n\n  switch (props.elementType) {\n    case 'textarea':\n      inputElement = <textarea\n        {...props.elementConfig}\n        value={props.value}\n        className={inputClasses.join(' ')}\n        onChange={props.changed}\n        />\n      break;\n    case 'select':\n      inputElement = (\n        <select\n          className={inputClasses.join(' ')}\n          value={props.value}\n          onChange={props.changed}>\n          {\n            props.elementConfig.options.map(option => (\n              <option key={option.value} value={option.value}>{option.label}</option>\n            ))\n          }\n        </select>\n      );\n      break;\n    case 'input':\n    default:\n      inputElement = <input\n        {...props.elementConfig}\n        value={props.value}\n        className={inputClasses.join(' ')}\n        onChange={props.changed}/>\n  };\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nexport default input;\n","import React, { Component, isValidElement } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport * as classes from \"./ContactData.module.css\";\nimport axios from \"../../../axios-orders\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport { connect } from 'react-redux';\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipcode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Postal\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Email\"\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"fastest\", label: \"Fastest\" },\n            { value: \"cheapest\", label: \"Cheapest\" }\n          ]\n        },\n        value: 'cheapest',\n        validation: {},\n        valid: true,\n        touched: false\n      }\n    },\n    formIsValid: false,\n    loading: false\n  };\n\n  orderHandler = event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n\n    const formData = {};\n\n    for (let formElementId in this.state.orderForm) {\n      formData[formElementId] = this.state.orderForm[formElementId].value;\n    }\n\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.totalPrice,\n      orderData: formData\n    };\n\n    axios\n      .post(\"/orders.json\", order)\n      .then(response => {\n        this.props.history.push(\"/\");\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        this.setState({\n          loading: false\n        });\n      });\n  };\n\n  inputChangeHandler = (event, inputId) => {\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n\n    const updatedFormElement = {\n      ...updatedOrderForm[inputId]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n    updatedOrderForm[inputId] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputId in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n    }\n\n    this.setState({\n      orderForm: updatedOrderForm,\n      formIsValid: formIsValid\n    });\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return isValid;\n    }\n\n    if (rules.required) {\n      isValid = isValid && value.trim() !== '';\n    }\n\n    if (rules.minLength) {\n      isValid = isValid && value.length >= rules.minLength;\n    }\n\n    if (rules.maxLength) {\n      isValid = isValid && value.length <= rules.maxLength;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {\n          formElementsArray.map(formElement => (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n              invalid={!formElement.config.valid}\n              touched={formElement.config.touched}\n              shouldValidate={formElement.config.validation}\n              changed={ (evt) => {\n                this.inputChangeHandler(evt, formElement.id)\n              }}\n            />\n          ))\n        }\n        <Button btnType=\"Success\" clicked={this.orderHandler} disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice\n  };\n};\n\nexport default connect(mapStateToProps)(ContactData);\n","import React, { Component } from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport { connect } from 'react-redux';\n\nclass Checkout extends Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  }\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace('/checkout/contact-data');\n  }\n\n  render() {\n    return (\n      <div>\n        <CheckoutSummary\n          ingredients={this.props.ingredients}\n          checkoutCancelled={this.checkoutCancelledHandler}\n          checkoutContinued={this.checkoutContinuedHandler}\n           />\n        <Route path={this.props.match.path + '/contact-data'} component={ContactData} />\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ingredients: state.ingredients,\n    totalPrice: state.totalPrice\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from \"react\";\nimport * as classes from \"./Order.module.css\";\nimport  Button from '../UI/Button/Button';\n\nconst order = props => {\n  const ingredients = [];\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      quantity: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientsOutput = ingredients.map(ingredient => {\n    return <span className={classes.Ingredient} key={ingredient.name}>{ingredient.name} ({ingredient.quantity})</span>\n  });\n\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientsOutput}</p>\n      <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\n      <Button btnType=\"Danger\" clicked={props.deleteOrderClicked}>DELETE</Button>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nclass Orders extends Component {\n  state = {\n    orders: [],\n    loading: false\n  }\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.setState({loading: true});\n    axios.get('/orders.json')\n      .then((response) => {\n        const fetchedOrders = [];\n        for(let key in response.data) {\n          fetchedOrders.push({\n            id: key,\n            ...response.data[key]\n          });\n        }\n        this.setState({\n          orders: fetchedOrders\n        });\n      })\n      .catch((error) => console.error(error))\n      .finally(() => this.setState({loading: false}));\n  }\n\n  deleteOrderClickedHandler(id) {\n    this.setState({loading: true});\n    axios.delete(`/orders/${id}.json`)\n      .then(() => {\n        console.log('Order ' + id + ' deleted');\n        const updatedOrders = this.state.orders.filter(order => order.id !== id);\n        this.setState({\n          orders: updatedOrders\n        });\n      }).catch(error => console.error(error))\n      .finally(() => this.setState({loading: false}));\n  }\n\n\n  render() {\n    const orders = this.state.orders.map((order) => (\n      <Order key={order.id}\n        ingredients={order.ingredients}\n        price={+order.price}\n        deleteOrderClicked={() => this.deleteOrderClickedHandler(order.id)}\n        />\n    ))\n    return (\n      <div>\n        {orders}\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(Orders, axios);","import React, { Component } from \"react\";\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch } from 'react-router';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './actions';\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    bacon: 0,\n    cheese: 0,\n    meat: 0\n  },\n  totalPrice: 4\n};\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.ADD_INGREDIENT: {\n      const ingredientName = action.ingredientName;\n      const priceAddition = INGREDIENT_PRICES[ingredientName];\n      const updatedTotalPrice = state.totalPrice + priceAddition;\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [ingredientName]: state.ingredients[ingredientName] + 1\n        },\n        totalPrice: updatedTotalPrice\n      };\n    }\n    case actionTypes.REMOVE_INGREDIENT: {\n      const ingredientName = action.ingredientName;\n      const priceRemoved = INGREDIENT_PRICES[ingredientName];\n      const updatedTotalPrice = state.totalPrice - priceRemoved;\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [ingredientName]: state.ingredients[ingredientName] - 1\n        },\n        totalPrice: updatedTotalPrice\n      };\n    }\n    default:\n      console.log('Unknown action type');\n      return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename='/my-burger-builder'>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}